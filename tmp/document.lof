\contentsline {part} {\figurenameToC }{\relax }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Left: One of the first popular desktop 3D printers, the MakerBot ``Cupcake CNC'', released in 2009. Right: The latest group of MakerBot models, released at the Consumer Electronics Showcase in January 2014.\relax }}{3}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces A simple 3x3 geoboard, with a rubber band stretched around several pegs, forming a triangle.\relax }}{8}
\contentsline {figure}{\numberline {2.2}{\ignorespaces Left: The UCube device, with four towers and eight lit switches, representing (in one instance) the eight vertices of a cube. Right: A detail view of one of the towers placed into the UCube modeling board with the bottom switch lit.\relax }}{9}
\contentsline {figure}{\numberline {2.3}{\ignorespaces A schematic illustration of the UCube hardware.\relax }}{11}
\contentsline {figure}{\numberline {2.4}{\ignorespaces Left: The UCube device, with four towers and six lit switches, representing the six vertices of a triangular prism. Center: An early version of the UCube software, representing the convex hull formed with the six active points from the picture to the left. Right: The resultant 3D print, exported from the software to a 3D-printer friendly format.\relax }}{13}
\contentsline {figure}{\numberline {2.5}{\ignorespaces Left: the SnapCAD interface, showing four towers with two red LEDs each, arranged in a cube-like configuration (as imagined earlier with the UCube). Right: a detail of the SnapCAD hardware - the PCB tower is housed in a 3D-printed shell, which plugs into one of a chained set of shift-register boards. The LED boards snap on to the towers via conductive magnetic snaps.\relax }}{14}
\contentsline {figure}{\numberline {2.6}{\ignorespaces A schematic of the SnapCAD technical design, showing a sample tower (A), LED light element (B), shift register board (C) and Arduino (D). The Arduino microcontroller's role is to send coordinates (and colors) of the LED lights, once placed, to a desktop computer. A fuller description of this schematic is provided in the accompanying text.\relax }}{16}
\contentsline {figure}{\numberline {2.7}{\ignorespaces Left: The SnapCAD software showing two convex hulls of different colors. Right: the SnapCAD software showing a minimal spanning tree model.\relax }}{17}
\contentsline {figure}{\numberline {2.8}{\ignorespaces Left: The SnapCAD software showing two convex hulls of different colors. Right: the SnapCAD software showing a minimal spanning tree model.\relax }}{19}
\contentsline {figure}{\numberline {2.9}{\ignorespaces Two views of the first pop-up book prototype, showing the interface in both open and closed states.\relax }}{21}
\contentsline {figure}{\numberline {2.10}{\ignorespaces The two PopCAD designs side-by-side: PopCAD v1 (left) uses copper tape and 30 gauge wire for the paper circuit, while PopCAD v2 (right) uses fabric-based conductive tape without needing any wires. PopCAD v2 also removes the need for large rectangles to be cut out of the paper tower for the paper strut mechanisms.\relax }}{22}
\contentsline {figure}{\numberline {2.11}{\ignorespaces Two views of PopCADv2 design: with towers raised and LEDs lit (left), and with the rightmost column of towers laid flat (right).\relax }}{23}
\contentsline {figure}{\numberline {2.12}{\ignorespaces Two views of the conductive tape circuit connecting the paper towers to the Arduino Mega microntroller. The circuit was constructed by laser cutting a design through conductive tape (but not through the paper beneath it) and removing the excess material.\relax }}{24}
\contentsline {figure}{\numberline {2.13}{\ignorespaces Two screen views (left and right) of the device software, illustrating the way in which the software displays the convex hull of a cube. Left: The set of eight input points, before the ``Hull'' button has been pressed. Right: The resulting convex hull, forming a cube from the input points.\relax }}{28}
\contentsline {figure}{\numberline {2.14}{\ignorespaces A collection of 3D printed shapes modeled using the convex hull mode in the software with the devices mentioned earlier in this chapter.\relax }}{29}
\contentsline {figure}{\numberline {2.15}{\ignorespaces A collection of paths modeled on our devices using the path mode in the software, exported from the software and 3D printed in our lab. The red shape in the middle may be recognizable as a traditional trefoil knot.\relax }}{30}
\contentsline {figure}{\numberline {2.16}{\ignorespaces A trefoil knot, as modeled on the UCube version of the software. The outlines (strokes) of the knot have been highlighted in red to show the manner in which the software constructs the path; points are expanded into cubes, and adjacent pairs of cubes and then connected with rectangular prisms (the convex hull of two separated cubes).\relax }}{31}
\contentsline {figure}{\numberline {2.17}{\ignorespaces A set of non-convex polyhedral forms modeled on the UCube, which constitute the well-known ``Soma Cube'' puzzle, shown assembled on the left with the individual shapes laid out on the right.\relax }}{32}
\contentsline {figure}{\numberline {2.18}{\ignorespaces Several examples of models produced using the minimal spanning tree mode in our software, exported, and printed out on a 3D printer.\relax }}{33}
\contentsline {figure}{\numberline {2.19}{\ignorespaces A four step sequence showing the operation of the edit mode: (upper left) six unaltered points; (upper right) the points form an ``H'' shape with tree mode selected; (lower left) the selection of edit mode; (lower right) the edited shape, with the corners of the original shape extended outward.\relax }}{36}
\contentsline {figure}{\numberline {2.20}{\ignorespaces Several of the shapes modeled on the PopCAD and SnapCAD devices by novice designers (most of them without any previous 3D modeling expertise) from one of the user studies we performed.\relax }}{37}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Examples of paper-based electronics: Electric Popables (left) is a pop-up book infused with a variety of paper-friendly electronics. The Living Wall (right) is a complete interactive environment embedded in wallpaper, reacting with light, sound, and movement.\relax }}{42}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Left: The ActiveCube system. Right: The Roblocks system.\relax }}{44}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Examples of interactive fabrication interfaces: Constructable (left) allows users to control a laser cutter with a set of physical tools as opposed to a pre-defined design file. Shaper (right), and interactive fabrication tool using expanding polyurethane foam.\relax }}{45}
\contentsline {figure}{\numberline {3.4}{\ignorespaces Left: The KidCAD interface showing a model Zebra and its 2.5D impression on screen. Right: The Easigami system, showing a series of connected polygonal faces with smart-hinges and embedded electronics.\relax }}{46}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces A screenshot of the testing setup, with the live output from the UCube on the right and the target shape on the left.\relax }}{48}
\contentsline {figure}{\numberline {4.2}{\ignorespaces The nine models used during the user study: a diamond, trapezoid, parallelogram, cube, elongated hexagon, irregular polyhedron, triangular prism, tetrahedron, house.\relax }}{52}
\contentsline {figure}{\numberline {4.3}{\ignorespaces Results of the modeling task, showing total modeling time spent per participant (left) and average modeling time spent per shape across participants (right).\relax }}{53}
\contentsline {figure}{\numberline {4.4}{\ignorespaces Results of the matching task, showing total time spent per participant (left) and average time spent per shape across participants (right).\relax }}{54}
\contentsline {figure}{\numberline {4.5}{\ignorespaces Left: A participant using a strategy of placing the physical model on top of the UCube while using both hands simultaneously to manipulate the towers. Right: A user pointing at the software representation of the shape with one hand, while manipulating the UCube interface with the other hand.\relax }}{55}
\contentsline {figure}{\numberline {4.6}{\ignorespaces An example problem from the spatial reasoning exercise. The figure at the top shows the choice array of four shapes, where the lower right figure is the correct option. Examples (a) through (d) show the four different types of translations found in the exercises - direct translation, diagonal translation, direct rotation, and diagonal rotation.\relax }}{58}
\contentsline {figure}{\numberline {4.7}{\ignorespaces The two groups of 12 3D printed models used in the first session (left) and second session (right). Each row is a different modeling mode (back = convex hull, middle = path, and front = minimal spanning tree). The shapes were presented in order from left to right as pictured above.\relax }}{59}
\contentsline {figure}{\numberline {4.8}{\ignorespaces The average recorded modeling times for each session, broken out (on top) by device and gender, and (on the bottom) by modeling mode. Error bars show standard error ($SE$).\relax }}{64}
\contentsline {figure}{\numberline {4.9}{\ignorespaces A view of the Mental Transformation Task results, broken out by symmetry type (B = bilateral, U = unilateral) and rotation or translation type performed on the shape being transformed.\relax }}{66}
\contentsline {figure}{\numberline {4.10}{\ignorespaces Mental Transformation Task results, broken down by session and by user.\relax }}{66}
\contentsline {figure}{\numberline {4.11}{\ignorespaces A series of screen grabs from the video recording showing various gestures from a user explaining her modeling strategy on one of the modeling tasks.\relax }}{69}
\contentsline {figure}{\numberline {4.12}{\ignorespaces A plot of the five types of gestures we coded (movement, perceptual whole, perceptual feature, vague, and other) over the number of correctly modeled shapes. The slope of the lines indicate the strength of correlation between each gesture type and overall modeling performance.\relax }}{70}
\contentsline {figure}{\numberline {4.13}{\ignorespaces A plot of the five types of speech we coded (movement, perceptual whole, perceptual feature, vague, and other) over the number of correctly modeled shapes. The slope of the lines indicate the strength of correlation between each speech type and overall modeling performance.\relax }}{71}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces A collection of the child-designed objects from the PopCAD/SnapCAD study.\relax }}{83}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Left: The Arduino Yun, an Arduino board with a Linux-based OS. Right: codebender.cc, an open-source, web-based platform for writing and uploading code directly to an Arduino.\relax }}{96}
\contentsline {figure}{\numberline {6.2}{\ignorespaces Left: The EyeWriter, a wearable eye-tracking system connected to a paint program that allows users with ALS (or other forms of paralysis) to paint. Right: The OpenPCR, an affordable, open-source polymerase chain reaction (PCR) machine that can be used at-home for DNA replication, gene sequencing, and more.\relax }}{98}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {A.1}{\ignorespaces The poster used at the presentation of the UCube at the Denver Art Museum.\relax }}{112}
\contentsline {figure}{\numberline {A.2}{\ignorespaces The poster presented at the 2013 FabLearn conference at Stanford University, in support of a short paper by the same name\cite {leducembodied}.\relax }}{113}
\addvspace {10\p@ }
